trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'

stages:
- stage: Build
  jobs:
  - job: BuildJob
    steps:
    - task: UseDotNet@2
      inputs:
        packageType: 'sdk'
        version: '5.x'
        installationPath: $(Agent.ToolsDirectory)/dotnet

    - script: dotnet build --configuration $(buildConfiguration)
      displayName: 'Build project'

    - task: PublishBuildArtifacts@1
      inputs:
        pathToPublish: '$(Build.ArtifactStagingDirectory)'
        artifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  jobs:
  - deployment: DeployJob
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureCLI@2
            inputs:
              azureSubscription: '<your-service-connection-name>'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                # Copy files to the VM
                az vm run-command invoke -g <resource-group-name> -n <vm-name> --command-id RunShellScript --scripts "mkdir -p /var/www/myapp && sudo chown -R $(whoami) /var/www/myapp"
                az vm run-command invoke -g <resource-group-name> -n <vm-name> --command-id RunShellScript --scripts "echo '$(Build.ArtifactStagingDirectory)/*' | sudo tee /var/www/myapp"
          - task: SSH@0
            inputs:
              sshEndpoint: '<your-ssh-service-connection>'
              runOptions: 'commands'
              commands: |
                cd /var/www/myapp
                sudo systemctl restart myapp
